
project = DaoMake::Project( "DaoCXX" ) 

daovm = DaoMake::FindPackage( "Dao", $REQUIRED )
llvm  = DaoMake::FindPackage( "LLVM", $REQUIRED )

if( daovm == none || llvm == none ) return

project.UseSharedLibrary( daovm, "dao" )
project.UseSharedLibrary( llvm )

project_objects = project.AddObjects( { "daoCXX.cpp" } )
project_objects.AddCompilingFlag( "-fno-rtti" );
project_objects.AddCompilingFlag( "-fvisibility-inlines-hidden" ); # llvm-3.2

project_dll = project.AddSharedLibrary( "DaoCXX", project_objects )
project_lib = project.AddStaticLibrary( "DaoCXX", project_objects )

project.AddLinkingFlag( "-lclangFrontend" )
project.AddLinkingFlag( "-lclangDriver" )
project.AddLinkingFlag( "-lclangCodeGen" )
project.AddLinkingFlag( "-lclangSema" )
project.AddLinkingFlag( "-lclangAnalysis" )
project.AddLinkingFlag( "-lclangAST" )
project.AddLinkingFlag( "-lclangParse" )
project.AddLinkingFlag( "-lclangLex" )
project.AddLinkingFlag( "-lclangBasic" )
project.AddLinkingFlag( "-lclangEdit" )
project.AddLinkingFlag( "-lclangSerialization" )


project.GenerateFinder( $TRUE );
project.Install( daovm.GetPath( "MOD-PATH" ), project_dll );
project.Install( daovm.GetPath( "MOD-PATH" ), project_lib );
